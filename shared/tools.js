let md5=require('md5');var Tools = {  //MD5加密  md5,  //检测是否邮箱  isEmail(email) {    let check = /^((([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})[; ,])*(([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})))$/;    return check.test(email);  },  //检测是否手机号  isPhone(phone) {    return /^1[3|4|5|7|8][0-9]\d{8}$/.test(phone);  },  //返回json  json(res, status, msg, data) {    let temp = {      code: status,      msg: msg,      data: data || ''    }    res.json(temp);  },  ioLogin: function (chatId, socketId) {    let p = new Promise((resolve, reject) => {      //如果未登录，登录      DB.sqlDB(`insert into socketer(chatId,socketId) values('${chatId}','${socketId}')`).then((data) => {        if (data.warningCount == 0) {          resolve(true);        } else {          resolve(false);        }      });    });    return p;  },  ioSignOut: function (socketId) {    //如果未登录，登录    DB.sqlDB(`delete from user where socketId=${socketId}`).then(function (data) {      console.log(data)      if (data.warningCount == 0) {        resolve(true);      } else {        resolve(false);      }    });  },  ioUpdateLogin: function (chatId, socketId) {    var p = new Promise(function (resolve, reject) {      DB.sqlDB(`update socketer set socketId='${socketId}' where chatId='${chatId}'`).then(function (data) {        if (data.warningCount == 0) {          resolve(true);        } else {          resolve(false);        }      });    });    return p;  },  ioHasLogin: function (socketId) {    var p = new Promise(function (resolve, reject) {      DB.sqlDB('select * from socketer where socketId=\'' + socketId + '\'').then(function (userList) {        console.log(userList)        if (userList.length == 1) {          resolve(true);        } else {          resolve(false);        }      });    });    return p;  },  getSocketId: function (chatId) {    var p = new Promise(function (resolve, reject) {      DB.sqlDB('select * from socketer where chatId=\'' + chatId + '\'').then(function (userList) {        console.log(userList)        if (userList.length == 1) {          resolve(userList[0].socketId);        } else {          resolve(false);        }      });    });    return p;  }}module.exports = Tools;